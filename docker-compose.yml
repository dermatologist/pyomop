services:
  omopdb:
    image: beapen/broadsea-atlasdb:1.0
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
    networks:
      - ohdsi-omop-v5
    volumes:
      - omop-postgres-data:/var/lib/postgresql/data


  webapi:
    image: ohdsi/webapi:2.14.0
    restart: unless-stopped
    ports:
      - "${WEBAPI_HOST_PORT:-9876}:8080"
    environment:
      DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      DATASOURCE_URL: jdbc:postgresql://omopdb:5432/postgres
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: mypass
      DATASOURCE_OHDSI_SCHEMA: webapi
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: webapi
      SPRING_BATCH_INITIALIZER_ENABLED: true
      # Spring batch initialization always
      SPRING_BATCH_INITIALIZE-SCHEMA: always
      SPRING_BATCH_REPOSITORY_TABLEPREFIX: webapi.BATCH_
      FLYWAY_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      FLYWAY_DATASOURCE_URL: jdbc:postgresql://omopdb:5432/postgres
      FLYWAY_DATASOURCE_USERNAME: postgres
      FLYWAY_DATASOURCE_PASSWORD: mypass
      FLYWAY_LOCATIONS: classpath:db/migration/postgresql
      FLYWAY_PLACEHOLDERS_OHDSISCHEMA: webapi
      FLYWAY_SCHEMAS: webapi

      SECURITY_ORIGIN: "http://localhost:8080"
      SECURITY_CORS_ENABLED: "true"
      SECURITY_SSL_ENABLED: "false"

    networks:
      - ohdsi-omop-v5
    depends_on:
      - omopdb

  atlas:
    image: ohdsi/atlas:2.14.1
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./config-local.js:/etc/atlas/config-local.js
    networks:
      - ohdsi-omop-v5
    depends_on:
      - webapi

networks:
  ohdsi-omop-v5:
    name: ${DOCKER_NETWORK}

volumes:
  omop-postgres-data:
    name: omop-postgres-data
    driver: local
